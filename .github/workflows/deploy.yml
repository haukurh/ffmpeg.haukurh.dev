name: Deploy to S3 site

on:
  release:
    types: [created]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Copy HTML files to S3 bucket
        run: |
          aws s3 sync src/ s3://$AWS_S3_BUCKET/ --size-only --exclude="*" --include="*/" --include="*.html" --cache-control="public,max-age=86400" | sed -e "s/.*$AWS_S3_BUCKET//" >> synced-files.tmp
          cat synced-files.tmp
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      - name: Copy other files to S3 bucket
        run: |
          aws s3 sync src/ s3://$AWS_S3_BUCKET/ --size-only --cache-control="public,max-age=2592000" --delete | sed -e "s/.*$AWS_S3_BUCKET//" >> synced-files.tmp
          cat synced-files.tmp
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      - name: Prepare CloudFront batch invalidation
        run: |
          touch files.json
          ./build/createCloudfrontInvalidation.sh synced-files.tmp
      - name: Get modified files count
        id: modified
        run: COUNT=$(jq '.Paths.Quantity' files.json) && echo "::set-output name=COUNT::$COUNT"
      - name: CloudFront invalidation
        if: steps.main.modified.COUNT != 0
        run: aws cloudfront create-invalidation --distribution-id "$AWS_CLOUDFRONT_DIST" --invalidation-batch file://files.json
        env:
          AWS_CLOUDFRONT_DIST: ${{ secrets.AWS_CLOUDFRONT_DIST }}
      - name: Clean up
        run: |
          rm synced-files.tmp
          rm files.json
